version: 2.1
references:
  maven_cache_key: &maven_cache_key
                   maven-deps-repo

executors:
  maven-executor:
    docker: # todo: create new image endpoint, add this in admin tab for faster starts
      - image: broadinstitute/study-server-build:back-end-2020-03-11A
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    resource_class: medium+
    working_directory: ~/repo/pepper-apis

commands:
  install-tcell:
    steps:
      - run:
          name: Download tcell files from bucket
          command: |          
            TAR_FILE_URL_PATTERN="gs://${BUILDS_BUCKET}/tcell-1.8.3.tar.gz"
            TAR_FILE_URL=`gsutil ls $TAR_FILE_URL_PATTERN  | sort -r | head -1`

            if [ -z $TAR_FILE_URL ]
            then
              echo "Could not find tcell archive ${TAR_FILE_URL_PATTERN}"
              exit 1
            fi
            TAR_FILE_PATH="/tmp/$(basename -- $TAR_FILE_URL)"
            gsutil cp  $TAR_FILE_URL $TAR_FILE_PATH
            cd ~/repo/ddp-workspace
            TCELL_DIR="tcell"
            mkdir -p $TCELL_DIR && tar -xvf $TAR_FILE_PATH
            echo "Contents of extracted archive at $TCELL_DIR"
            ls -l $TCELL_DIR
  render-configs:
    steps:
      - run:
          name: Determine deployment environment for branch << pipeline.git.branch >>
          command: |
            case "<< pipeline.git.branch >>" in
            develop)
              DEPLOY_ENV=dev
            ;;
              study-server-to-appengine)
              DEPLOY_ENV=dev
            ;;
              tcell-instrumentation)
              DEPLOY_ENV=dev
            ;;
            test)
              DEPLOY_ENV=test
              NG_BUILD_OPTS=--prod --aot
            ;;
            staging)
              DEPLOY_ENV=staging
              NG_BUILD_OPTS=--prod --aot
            ;;
            staging)
              DEPLOY_ENV=prod
              NG_BUILD_OPTS=--prod --aot
            ;;
            *)
              echo "Cannot map << pipeline.git.branch >> to a deployment environment"
              exit 17
            ;;
            esac
            echo "Setting deployment ENVIRONMENT to $DEPLOY_ENV"
            echo "export ENVIRONMENT=$DEPLOY_ENV" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: show environment variables
          command: env
      - run:
          name: api-build.sh
          command: ./api-build.sh v1 $ENVIRONMENT . --config
          environment:
            USE_DOCKER: false


  install-maven-dependencies:
    description: "Install maven dependencies"
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Show pipeline vars
          command: |
            echo "pipeline.id << pipeline.id >>"
            echo "pipeline.number	 << pipeline.number	 >>"
            echo "pipeline.project.git_url << pipeline.project.git_url >>"
            echo "pipeline.project.type << pipeline.project.type >>"
            echo "pipeline.git.tag << pipeline.git.tag >>"
            echo "pipeline.git.branch << pipeline.git.branch >>"
            echo "pipeline.git.revision << pipeline.git.revision >>"
            echo "pipeline.git.base_revision << pipeline.git.base_revision >>"
      - render-configs      
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - restore_cache:
          key: *maven_cache_key
      - run:
          name: Setup test databases
          command: |
            mysql -h 127.0.0.1 -u root --password=rootpw test_db --execute="CREATE DATABASE studyservicedb CHARACTER SET utf8 COLLATE utf8_general_ci"
            mysql -h 127.0.0.1 -u root --password=rootpw test_db --execute="CREATE DATABASE housekeepingdb CHARACTER SET utf8 COLLATE utf8_general_ci"
      - run:
          name: Run maven
          command: |
            mvn --batch-mode --fail-never -file pom.xml package \
                     -Ditext.license=output-config/itextkey.xml \
                     -Dddp.firecloudKeysDir=output-config/fc_keys \
                     -Dconfig.file=output-config/testing-circleci.conf \
                     install
          #            mvn --batch-mode --fail-never -file smoketest-pom.xml install package test
#            mvn --batch-mode --fail-never -file housekeeping.xml install package test           
          # working_directory: ~/repo/pepper-apis
      - save_cache:
          key: *maven_cache_key
          paths:
            - ~/.m2
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

jobs:
  maven-install:
    executor:
      name: maven-executor
    steps:
      - install-maven-dependencies
      - install-tcell

workflows:
  version: 2
  build-deploy:
    jobs:
      - maven-install:
          filters:
            branches:
              only:
	        - study-server-to-appengine
		- tcell-instrumentation
